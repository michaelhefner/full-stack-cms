// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model Navigation {
  id         String     @id @default(cuid())
  title      String     @default("")
  url        String     @unique @default("")
  basicpages BasicPage? @relation("BasicPage_navigation")
}

model BasicPage {
  id           String      @id @default(cuid())
  title        String      @default("")
  navigation   Navigation? @relation("BasicPage_navigation", fields: [navigationId], references: [id])
  navigationId String?     @unique @map("navigation")
  content      Content[]   @relation("BasicPage_content")
  author       User?       @relation("BasicPage_author", fields: [authorId], references: [id])
  authorId     String?     @map("author")
  tags         Tag[]       @relation("BasicPage_tags")
  status       String?     @default("draft")
  publishedAt  DateTime?   @default(now())

  @@index([authorId])
}

model Content {
  id          String      @id @default(cuid())
  title       String      @default("")
  author      User?       @relation("Content_author", fields: [authorId], references: [id])
  authorId    String?     @map("author")
  tags        Tag[]       @relation("Content_tags")
  basicpages  BasicPage[] @relation("BasicPage_content")
  content     String      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  status      String?     @default("draft")
  publishedAt DateTime?   @default(now())

  @@index([authorId])
}

model User {
  id         String      @id @default(cuid())
  name       String      @default("")
  email      String      @unique @default("")
  password   String
  isAdmin    Boolean     @default(false)
  content    Content[]   @relation("Content_author")
  basicpages BasicPage[] @relation("BasicPage_author")
  createdAt  DateTime?   @default(now())
}

model Tag {
  id            String      @id @default(cuid())
  name          String      @default("")
  tags          Tag[]       @relation("Tag_tags")
  content       Content[]   @relation("Content_tags")
  basicpages    BasicPage[] @relation("BasicPage_tags")
  from_Tag_tags Tag[]       @relation("Tag_tags")
}

model Image {
  id              String  @id @default(cuid())
  name            String  @default("")
  altText         String  @default("")
  image_id        String?
  image_filesize  Int?
  image_width     Int?
  image_height    Int?
  image_extension String?
}
